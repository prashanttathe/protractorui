import { CollisionNode } from '../CollisionNode';
import { IndexedNode } from '../IndexedNode';
import { SIZE, hashFragment, toBitmap } from '../../common';
export function combineLeafNodes(shift, hash1, leafNode1, hash2, leafNode2) {
    if (hash1 === hash2)
        return new CollisionNode(hash1, [leafNode2, leafNode1]);
    var fragment1 = hashFragment(shift, hash1);
    var fragment2 = hashFragment(shift, hash2);
    return new IndexedNode(toBitmap(fragment1) | toBitmap(fragment2), (fragment1 === fragment2
        ? [combineLeafNodes(shift + SIZE, hash1, leafNode1, hash2, leafNode2)]
        : fragment1 < fragment2 ? [leafNode1, leafNode2] : [leafNode2, leafNode1]));
}
//# sourceMappingURL=combineLeafNodes.js.map