import { NOTHING } from '../constants';
import { empty } from '../EmptyNode';
import { combineLeafNodes } from './combineLeafNodes';
var LeafNode = (function () {
    function LeafNode(hash, key, value) {
        this.type = 1 /* LEAF */;
        this.hash = hash;
        this.key = key;
        this.value = value;
    }
    LeafNode.prototype.modify = function (shift, get, hash, key, size) {
        if (key === this.key) {
            var value_1 = get(this.value);
            if (value_1 === this.value)
                return this;
            if (value_1 === NOTHING) {
                --size.value;
                return empty();
            }
            return new LeafNode(hash, key, value_1);
        }
        var value = get();
        if (value === NOTHING)
            return this;
        ++size.value;
        return combineLeafNodes(shift, this.hash, this, hash, new LeafNode(hash, key, value));
    };
    return LeafNode;
}());
export { LeafNode };
//# sourceMappingURL=LeafNode.js.map