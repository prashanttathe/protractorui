import { NOTHING } from '../constants';
import { LeafNode, combineLeafNodes } from '../LeafNode';
import { newCollisionList } from './newCollisionList';
var CollisionNode = (function () {
    function CollisionNode(hash, children) {
        this.type = 2 /* COLLISION */;
        this.hash = hash;
        this.children = children;
    }
    CollisionNode.prototype.modify = function (shift, get, hash, key, size) {
        if (hash === this.hash) {
            var list = newCollisionList(this.hash, this.children, get, key, size);
            if (list === this.children)
                return this;
            return list.length > 1
                ? new CollisionNode(this.hash, list)
                : list[0];
        }
        var value = get();
        if (value === NOTHING)
            return this;
        ++size.value;
        return combineLeafNodes(shift, this.hash, this, hash, new LeafNode(hash, key, value));
    };
    return CollisionNode;
}());
export { CollisionNode };
//# sourceMappingURL=CollisionNode.js.map