import { NOTHING } from '../constants';
import { LeafNode } from '../LeafNode';
import { remove, insert } from '../../common';
export function newCollisionList(hash, list, get, key, size) {
    var length = list.length;
    for (var i = 0; i < length; ++i) {
        var child = list[i];
        if (child.key === key) {
            var value = child.value;
            var newValue_1 = get(value);
            if (newValue_1 === value)
                return list;
            if (newValue_1 === NOTHING) {
                --size.value;
                return remove(i, list);
            }
            return insert(i, new LeafNode(hash, key, newValue_1), list);
        }
    }
    var newValue = get();
    if (newValue === NOTHING)
        return list;
    ++size.value;
    return insert(length, new LeafNode(hash, key, newValue), list);
}
//# sourceMappingURL=newCollisionList.js.map