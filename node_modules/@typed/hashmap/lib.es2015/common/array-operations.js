/**
 * Immutable replacement of a value at a given index
 */
/**
 * Immutable replacement of a value at a given index
 */ export function replace(index, value, array) {
    var length = array.length;
    var newArray = Array(length);
    for (var i = 0; i < length; ++i) {
        newArray[i] = array[i];
    }
    newArray[index] = value;
    return newArray;
}
/**
 * Immutable removal of a value at given index
 */
export function remove(index, array) {
    var length = array.length;
    if (length === 0 || index >= length)
        return array;
    if (length === 1)
        return [];
    var newArray = Array(length - 1);
    var i = 0;
    for (; i < index; ++i)
        newArray[i] = array[i];
    for (i = i + 1; i < length; ++i)
        newArray[i - 1] = array[i];
    return newArray;
}
/**
 * Immutable insertion of a value at a given index
 */
export function insert(index, value, array) {
    var length = array.length;
    var newArray = Array(length - 1);
    var i = 0;
    for (; i < index; ++i)
        newArray[i] = array[i];
    newArray[i++] = value;
    for (; i < length; ++i)
        newArray[i] = array[i - 1];
    return newArray;
}
//# sourceMappingURL=array-operations.js.map